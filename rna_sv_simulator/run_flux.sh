#!/bin/bash
set -eu

if [ $# -ne 1 ]
    then
    EXPERIMENT="custom"

    echo "Description: "
    echo "Run flux with custom .par/.pro files."
    echo "Usage:"
    echo "$0 <EXPERIMENT>"
    echo ""
    echo "Example:"
    echo "$0 $EXPERIMENT"
    echo "   where EXPERIMENT is the prefix to .par/.pro files."
    exit -1
fi

EXPERIMENT=$1

# Stub example of how to run flux with library generation step.
FLUX="flux-simulator-1.2.1/bin/flux-simulator"
BUNDLE="flux-bundle"

# Run for the first time so we get .pro files
echo "[INFO] Generating .par file? (#$FLUX -p $BUNDLE/$EXPERIMENT.par -x) [Y/n]"
read answer
if [ answer != "n" ]; then
    $FLUX -p $BUNDLE/$EXPERIMENT".par" -x
    answer=""
fi

### TODO: Apply correction to .pro file after running Flux once.
### custom.pro modified
echo "[INFO] Join .external.pro file expressions to the .pro file generated by flux version? [Y/n]"
read answer
if [ answer != "n" ]; then
    echo "Doing something to the .pro file"
    join -a1 -1 1 -2 1 <(cut -f1,2,3,4,5,6 $BUNDLE/$EXPERIMENT.pro | sort) <(cut -f1,2,3,4,5,6 $BUNDLE/$EXPERIMENT.external.pro | sort) \
	| cut -f1,2,3,4,10,11  -d" " \
	| sed 's|\(.*\)|\1 0 0|g' \
	| tr " " "\t" \
	| cut -f1,2,3,4,5,6 > $BUNDLE/$EXPERIMENT.tmp.pro

    cp $BUNDLE/$EXPERIMENT.pro $BUNDLE/$EXPERIMENT.pro.fromflux
    cp $BUNDLE/$EXPERIMENT.tmp.pro $BUNDLE/$EXPERIMENT.pro
    echo "MERGE SUCCESSFUL."
    answer=""
fi

# Resume with -l (library generation) and -s (sequencing) to get proper expression in FASTQ.
echo "[INFO] Generating .lib file? ($FLUX -p $BUNDLE/$EXPERIMENT.par -ls) [Y/n]"
read answer
if [ answer != "n" ]; then
    $FLUX -p $BUNDLE/$EXPERIMENT".par" -ls
    answer=""
fi
